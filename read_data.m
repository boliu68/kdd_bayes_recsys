
%% Import data from text file.
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2013/11/25 02:16:23

%% Initialize variables.
% delimiter = '::';
% filepath = 'movietweets10k.dat';
% numberOfneighbors=5;
% TotalUsers=943;
% TotalItems=1682;
% userNumber=269;
% itemNumber=127;
% 
% %% Format string for each line of text:
% %   column1: double (%f)
% %	column2: double (%f)
% %   column3: double (%f)
% %	column4: double (%f)
% % For more information, see the TEXTSCAN documentation.
% formatSpec = '%f%*s%*s%*s%[^\n\r]';
% 
% %% Open the text file.
% fileID = fopen(filepath,'r');
% 
% %% Read columns of data according to format string.
% % This call is based on the structure of the file used to generate this
% % code. If an error occurs for a different file, try regenerating the code
% % from the Import Tool.
% dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN, 'ReturnOnError', false);
TotalUsers = length(unique(dataArray{1}));
TotalItems=length(unique(dataArray{2}));
% 
% %% Close the text file.
% fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
UserID = dataArray{:, 1};
ItemID = dataArray{:, 2};
Rating = dataArray{:, 3};
TimeStamp = dataArray{:, 4};

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID ans;

%% Sort the given randomly arranged dataset according to Userid,ItemID combination in ascending order
B = sortrows(UserID,1);
C = horzcat(UserID,ItemID,Rating);
SortedData = sortrows(C,[1 2]);

%% Transform the sorted data to a 943 X 1682 matrix where rows represent the users and columns represent the items.
X=zeros(TotalUsers,TotalItems);
m=size(SortedData,1);
for rowindex = 1:m
    userid=SortedData(rowindex,1);
    itemid=SortedData(rowindex,2);
    rating=SortedData(rowindex,3);
    X(userid,itemid)=rating;
end

%% Clear temporary variables
clearvars B C UserID ItemID Rating Timestamp userid itemid rating m;
